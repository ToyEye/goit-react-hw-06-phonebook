{"version":3,"sources":["Components/Container/Container.styled.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","redux/contacts/contact-action.js","redux/contacts/contact-selector.js","Components/ContactList/ContactList.styled.js","Components/Footer/Footer.js","Components/Filter/Filter.js","Components/NotificationMessage/NotificationMessage.js","App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Button","button","ImputEnter","input","InputType","label","InputText","p","FormStyled","form","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","evt","target","value","reset","preventDefault","type","pattern","title","placeholder","required","onChange","Section","section","Title","h1","actions","addContact","createAction","payload","id","nanoid","deleteContact","filterChange","getContact","state","contacts","getFilter","filter","getAllContacts","normalizeFilter","toLocaleLowerCase","contact","toLowerCase","includes","ContactStyledList","ul","ContactItem","li","ContactName","ContactList","useSelector","dispatch","useDispatch","map","onClick","ContainerDeveloper","Link","a","Developer","Footer","href","Filter","NotificationMessage","App","toastOptions","error","duration","find","length","toast","success","createReducer","item","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfigContacts","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c4657e86.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1120px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { Container };\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 5px 15px;\n  width: 110px;\n  margin-right: auto;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst ImputEnter = styled.input`\n  width: 220px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border-color: #d4d4d4;\n\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\nconst InputType = styled.label`\n  margin-bottom: 10px;\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\n\nconst InputText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport { ImputEnter, InputType, InputText };\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 450px;\n  padding: 10px 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter your name\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </InputType>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter your number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </InputType>\n      <Button type=\"submit\">Add contact</Button>\n    </FormStyled>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  margin-top: 25px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-weight: 600;\n  font-size: 20px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nexport { Section, Title };\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst addContact = createAction('contact/addContact', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contact/delete');\r\n\r\nconst filterChange = createAction('contact/filter');\r\n\r\nconst actions = { addContact, deleteContact, filterChange };\r\nexport default actions;\r\n","export const getContact = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => {\r\n  const contacts = getContact(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizeFilter = filter.toLocaleLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter)\r\n  );\r\n};\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport actions from '../../redux/contacts/contact-action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllContacts } from '../../redux/contacts/contact-selector';\n\nconst ContactStyledList = styled.ul`\n  width: 450px;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\nconst ContactItem = styled.li`\n  color: black;\n  &:not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nconst ContactName = styled.p`\n  color: black;\n  margin-bottom: 15px;\n`;\n\nconst ContactList = () => {\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ContactStyledList>\n      {contacts.map(({ name, id, number }) => (\n        <ContactItem key={id} id={id}>\n          <ContactName>\n            {name} : {number}\n          </ContactName>\n          <Button\n            onClick={() => dispatch(actions.deleteContact(id))}\n            type=\"button\"\n          >\n            Delete\n          </Button>\n        </ContactItem>\n      ))}\n    </ContactStyledList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\r\n\r\nconst ContainerDeveloper = styled.div`\r\n  margin-left: auto;\r\n  margin-top: auto;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: orange;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Developer = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: orange;\r\n  text-align: right;\r\n`;\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <ContainerDeveloper>\r\n      <Developer>\r\n        Developed by{' '}\r\n        <Link href=\"https://www.linkedin.com/in/alexey-korotenko-379613219/\">\r\n          Alexey Korotenko\r\n        </Link>\r\n      </Developer>\r\n    </ContainerDeveloper>\r\n  );\r\n};\r\n","import React from 'react';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\nimport actions from '../../redux/contacts/contact-action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contact-selector';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handler = evt => {\n    dispatch(actions.filterChange(evt.target.value));\n  };\n\n  return (\n    <InputType>\n      <InputText>Find contact by name</InputText>\n      <ImputEnter type=\"text\" value={filter} onChange={handler} />\n    </InputType>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst NotificationMessage = styled.div`\n  text-align: center;\n  color: red;\n  margin: 10px;\n  font-weight: 600;\n  font-size: 22px;\n`;\n\nexport default NotificationMessage;\n","import './App.css';\nimport React from 'react';\nimport { Container } from './Components/Container';\nimport Form from './Components/Form';\nimport { Section, Title } from './Components/Section';\nimport ContactList from './Components/ContactList';\nimport { Footer } from './Components/Footer';\nimport Filter from './Components/Filter';\nimport toast, { Toaster } from 'react-hot-toast';\nimport NotificationMessage from './Components/NotificationMessage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from './redux/contacts/contact-action';\nimport { getContact } from './redux/contacts/contact-selector';\n\nexport default function App() {\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const addContact = ({ name, number }) => {\n    if (\n      contacts.find(contact => contact.name !== name) ||\n      contacts.length === 0\n    ) {\n      toast.success('Контакт добавлен');\n      dispatch(actions.addContact(name, number));\n    } else {\n      toast.error('Контакт существует!');\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <Toaster\n        toastOptions={{\n          error: {\n            duration: 2000,\n          },\n        }}\n      />\n      <Section>\n        <Title>Phonebook</Title>\n        <Form onSubmit={addContact} />\n      </Section>\n      <Section>\n        <Title>Contacts</Title>\n        <Filter />\n        {contacts.length < 1 ? (\n          <NotificationMessage>No Contacts</NotificationMessage>\n        ) : (\n          <ContactList />\n        )}\n      </Section>\n\n      <Footer />\n    </Container>\n  );\n}\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport actions from './contact-action';\r\nconst inicial = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(inicial, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contacts from './contacts/contact-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfigContacts = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst persistedReducer = persistReducer(persistConfigContacts, contacts);\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: persistedReducer },\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}