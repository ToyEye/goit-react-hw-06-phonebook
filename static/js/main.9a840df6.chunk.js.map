{"version":3,"sources":["Components/Container/Container.styled.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","Components/ContactList/ContactList.styled.js","Components/Filter/Filter.js","Components/NotificationMessage/NotificationMessage.js","App.js","index.js"],"names":["Container","styled","div","Button","button","ImputEnter","input","InputType","label","InputText","p","FormStyled","form","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","evt","target","value","reset","preventDefault","type","pattern","title","placeholder","required","onChange","Section","section","Title","h1","ContactStyledList","ul","ContactItem","li","ContactName","ContactList","contacts","onDeleteItem","map","id","onClick","prototype","PropTypes","func","objectOf","shape","string","Filter","isRequired","NotificationMessage","App","setContacts","filter","setFilter","useEffect","storageContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","toastOptions","error","duration","contact","includes","newContact","nanoid","toast","success","length","normalizeFilter","toLocaleLowerCase","toLowerCase","filterChange","itemId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAEMA,EAAYC,IAAOC,IAAV,8ICUAC,EAVAF,IAAOG,OAAV,iNCANC,EAAaJ,IAAOK,MAAV,iLAWVC,EAAYN,IAAOO,MAAV,+GAQTC,EAAYR,IAAOS,EAAV,mD,OCfTC,EAAaV,IAAOW,KAAV,iNAWD,SAASC,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,OAApBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAWAC,EAAQ,WACZP,EAAQ,IACRE,EAAU,KAGZ,OACE,eAACR,EAAD,CAAYG,SAbO,SAAAO,GACnBA,EAAII,iBAEJX,EAAS,CAAEE,OAAME,WACjBM,KASA,UACE,eAACjB,EAAD,WACG,IACD,cAACE,EAAD,mBACA,cAACJ,EAAD,CACEqB,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,YAAY,kBACZC,UAAQ,EACRP,MAAOP,EACPe,SAAUX,OAGd,eAACb,EAAD,WACG,IACD,cAACE,EAAD,mBACA,cAACJ,EAAD,CACEqB,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,+FACNE,UAAQ,EACRD,YAAY,oBACZN,MAAOL,EACPa,SAAUX,OAGd,cAAC,EAAD,CAAQM,KAAK,SAAb,4BC5EN,I,MAAMM,EAAU/B,IAAOgC,QAAV,mGAMPC,EAAQjC,IAAOkC,GAAV,2H,gBCHLC,EAAoBnC,IAAOoC,GAAV,oLASjBC,EAAcrC,IAAOsC,GAAV,oGAOXC,EAAcvC,IAAOS,EAAV,qEAKX+B,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAb,OAClB,cAACP,EAAD,UACGM,EAASE,KAAI,gBAAG5B,EAAH,EAAGA,KAAM6B,EAAT,EAASA,GAAI3B,EAAb,EAAaA,OAAb,OACZ,eAACoB,EAAD,CAAsBO,GAAIA,EAA1B,UACE,eAACL,EAAD,WACGxB,EADH,MACYE,KAEZ,cAAC,EAAD,CAAQ4B,QAAS,kBAAMH,EAAaE,IAAKnB,KAAK,SAA9C,sBAJgBmB,SAYxBJ,EAAYM,UAAY,CACtBJ,aAAcK,IAAUC,KACxBP,SAAUM,IAAUE,SAClBF,IAAUG,MAAM,CACdnC,KAAMgC,IAAUI,OAChBlC,OAAQ8B,IAAUI,OAClBP,GAAIG,IAAUI,WAKLX,Q,QChDTY,EAAS,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAChB,OACE,eAACxB,EAAD,CAAWwB,SAAUA,EAArB,UACE,cAACtB,EAAD,mCACA,cAACJ,EAAD,QAKNgD,EAAON,UAAY,CACjBhB,SAAUiB,IAAUC,KAAKK,YAGZD,I,EAAAA,I,OCPAE,EARatD,IAAOC,IAAV,4HCkBV,SAASsD,IACtB,MAAgCzC,oBAAS,iBATlC,CACL,CAAE8B,GAAI,OAAQ7B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE2B,GAAI,OAAQ7B,KAAM,iBAAkBE,OAAQ,aAC9C,CAAE2B,GAAI,OAAQ7B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE2B,GAAI,OAAQ7B,KAAM,iBAAkBE,OAAQ,iBAKhD,mBAAOwB,EAAP,KAAiBe,EAAjB,KACA,EAA4B1C,mBAAS,IAArC,mBAAO2C,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAkBC,aAAaC,QAAQ,YACvCC,EAAiBC,KAAKC,MAAML,GAC9BG,GACFP,EAAYO,KAEb,IAEHJ,qBAAU,WACRE,aAAaK,QAAQ,WAAYF,KAAKG,UAAU1B,MAC/C,CAACA,IAmCJ,OACE,eAAC1C,EAAD,WACE,cAAC,IAAD,CACEqE,aAAc,CACZC,MAAO,CACLC,SAAU,QAIhB,eAACvC,EAAD,WACE,cAACE,EAAD,wBACA,cAACrB,EAAD,CAAMC,SA5CO,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAE1B,IADYwB,EAASgB,QAAO,SAAAc,GAAO,OAAIA,EAAQxD,QACpCyD,SAASzD,GAApB,CACE,IAAM0D,EAAa,CACjB7B,GAAI8B,cACJ3D,KAAMA,EACNE,OAAQA,GAGV,OADA0D,IAAMC,QAAQ,+FACPpB,GAAY,SAAAf,GAAQ,OAAKgC,GAAL,mBAAoBhC,OAE/CkC,IAAMN,MAAM,kHAmCZ,eAACtC,EAAD,WACE,cAACE,EAAD,uBACA,cAAC,EAAD,CAAQX,MAAOmC,EAAQ3B,SA1BT,SAAAV,GAClBsC,EAAUtC,EAAIC,OAAOC,UA0BhBmB,EAASoC,OAAS,EACjB,cAAC,EAAD,0BAEA,cAAC,EAAD,CAAapC,SA1BA,WACnB,IAAMqC,EAAkBrB,EAAOsB,oBAC/B,OAAOtC,EAASgB,QAAO,SAAAc,GAAO,OAC5BA,EAAQxD,KAAKiE,cAAcR,SAASM,MAuBTG,GAAgBvC,aApC5B,SAAAwC,GACjB1B,GAAY,SAAA2B,GAAS,OACnBA,EAAU1B,QAAO,SAAAc,GAAO,OAAIA,EAAQ3B,KAAOsC,iBChDjDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a840df6.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  max-width: 1120px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { Container };\n","import styled from '@emotion/styled';\n\nconst Button = styled.button`\n  padding: 5px 15px;\n  width: 110px;\n  margin-right: auto;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nconst ImputEnter = styled.input`\n  width: 220px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border-color: #d4d4d4;\n\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\nconst InputType = styled.label`\n  margin-bottom: 10px;\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\n\nconst InputText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport { ImputEnter, InputType, InputText };\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 450px;\n  padding: 10px 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter your name\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </InputType>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter your number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </InputType>\n      <Button type=\"submit\">Add contact</Button>\n    </FormStyled>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Section = styled.section`\n    margin-top: 25px;\n    margin-bottom: 25px;\n  text-align:center;\n`\n\nconst Title = styled.h1`\n    font-weigth: 400;\n    font-size: 20px;\n    margin-bottom: 25px;\n    text-align:center;\n`\n\nexport {Section,Title}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Button from '../Button';\nimport PropTypes from 'prop-types';\n\nconst ContactStyledList = styled.ul`\n  width: 450px;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\nconst ContactItem = styled.li`\n  color: black;\n  &:not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nconst ContactName = styled.p`\n  color: black;\n  margin-bottom: 15px;\n`;\n\nconst ContactList = ({ contacts, onDeleteItem }) => (\n  <ContactStyledList>\n    {contacts.map(({ name, id, number }) => (\n      <ContactItem key={id} id={id}>\n        <ContactName>\n          {name} : {number}\n        </ContactName>\n        <Button onClick={() => onDeleteItem(id)} type=\"button\">\n          Delete\n        </Button>\n      </ContactItem>\n    ))}\n  </ContactStyledList>\n);\n\nContactList.prototype = {\n  onDeleteItem: PropTypes.func,\n  contacts: PropTypes.objectOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onChange }) => {\n  return (\n    <InputType onChange={onChange}>\n      <InputText>Find contact by name</InputText>\n      <ImputEnter />\n    </InputType>\n  );\n};\n\nFilter.prototype = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nconst NotificationMessage = styled.div`\n  text-align: center;\n  color: red;\n  margin: 10px;\n  font-weight: 600;\n  font-size: 22px;\n`;\n\nexport default NotificationMessage;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Container } from './Components/Container';\nimport Form from './Components/Form';\nimport { Section, Title } from './Components/Section';\nimport ContactList from './Components/ContactList';\nimport { nanoid } from 'nanoid';\nimport Filter from './Components/Filter';\nimport toast, { Toaster } from 'react-hot-toast';\nimport NotificationMessage from './Components/NotificationMessage';\n\nfunction getContact() {\n  return [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n}\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => getContact());\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const storageContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(storageContacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    let array = contacts.filter(contact => contact.name);\n    if (!array.includes(name)) {\n      const newContact = {\n        id: nanoid(),\n        name: name,\n        number: number,\n      };\n      toast.success('Контакт добавлен');\n      return setContacts(contacts => [newContact, ...contacts]);\n    } else {\n      toast.error('Контакт существует!');\n      return;\n    }\n  };\n\n  const deleteItem = itemId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== itemId)\n    );\n  };\n\n  const filterEnter = evt => {\n    setFilter(evt.target.value);\n  };\n\n  const filterChange = () => {\n    const normalizeFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  return (\n    <Container>\n      <Toaster\n        toastOptions={{\n          error: {\n            duration: 2000,\n          },\n        }}\n      />\n      <Section>\n        <Title>Phonebook</Title>\n        <Form onSubmit={addContact} />\n      </Section>\n      <Section>\n        <Title>Contacts</Title>\n        <Filter value={filter} onChange={filterEnter} />\n        {contacts.length < 1 ? (\n          <NotificationMessage>No Contacts</NotificationMessage>\n        ) : (\n          <ContactList contacts={filterChange()} onDeleteItem={deleteItem} />\n        )}\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}