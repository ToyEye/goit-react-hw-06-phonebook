{"version":3,"sources":["Components/Container/Container.styled.js","redux/contacts/contact-action.js","redux/contacts/contact-selector.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.styled.js","Components/Footer/Footer.js","Components/Filter/Filter.js","App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["Container","styled","div","actions","addContact","createAction","name","number","payload","id","nanoid","deleteContact","filterChange","getContact","state","contacts","getFilter","filter","getAllContacts","normalizeFilter","toLocaleLowerCase","contact","toLowerCase","includes","Button","button","ImputEnter","input","InputType","label","InputText","p","FormStyled","form","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","target","value","reset","onSubmit","preventDefault","find","toast","error","success","type","pattern","title","placeholder","required","onChange","Section","section","Title","h1","ContactItemStyled","li","ContactName","ContactItem","onClick","ContactStyledList","ul","ContactList","map","ContainerDeveloper","Link","a","Developer","Footer","href","Filter","App","toastOptions","duration","createReducer","item","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfigContacts","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3a055df0.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1120px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { Container };\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst addContact = createAction('contact/addContact', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contact/delete');\r\n\r\nconst filterChange = createAction('contact/filter');\r\n\r\nconst actions = { addContact, deleteContact, filterChange };\r\nexport default actions;\r\n","export const getContact = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => {\r\n  const contacts = getContact(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizeFilter = filter.toLocaleLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter)\r\n  );\r\n};\r\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 5px 15px;\n  width: 110px;\n  margin-right: auto;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst ImputEnter = styled.input`\n  width: 220px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border-color: #d4d4d4;\n\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\nconst InputType = styled.label`\n  margin-bottom: 10px;\n  &:hover,\n  &:active {\n    border-color: #7cb1ec;\n  }\n`;\n\nconst InputText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport { ImputEnter, InputType, InputText };\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contact-action';\nimport { getContact } from '../../redux/contacts/contact-selector';\nimport Button from '../Button';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 450px;\n  padding: 10px 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const addContact = ({ name, number }) => {\n    if (contacts.find(contact => contact.name === name)) {\n      toast.error('Контакт существует!');\n      return;\n    } else {\n      toast.success('Контакт добавлен');\n      dispatch(actions.addContact(name, number));\n    }\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    addContact({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter your name\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </InputType>\n      <InputType>\n        {' '}\n        <InputText>Name</InputText>\n        <ImputEnter\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter your number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </InputType>\n      <Button type=\"submit\">Add contact</Button>\n    </FormStyled>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  margin-top: 25px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-weight: 600;\n  font-size: 20px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n\nexport { Section, Title };\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\nimport actions from '../../redux/contacts/contact-action';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItemStyled = styled.li`\r\n  color: black;\r\n  &:not(:last-child) {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nconst ContactName = styled.p`\r\n  color: black;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const ContactItem = ({ id, name, number }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ContactItemStyled key={id} id={id}>\r\n      <ContactName>\r\n        {name} : {number}\r\n      </ContactName>\r\n      <Button onClick={() => dispatch(actions.deleteContact(id))} type=\"button\">\r\n        Delete\r\n      </Button>\r\n    </ContactItemStyled>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { getAllContacts } from '../../redux/contacts/contact-selector';\nimport { ContactItem } from '../ContactItem';\n\nconst ContactStyledList = styled.ul`\n  width: 450px;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nconst ContactList = () => {\n  const contacts = useSelector(getAllContacts);\n\n  return (\n    <ContactStyledList>\n      {contacts.map(({ name, id, number }) => (\n        <ContactItem key={id} name={name} id={id} number={number} />\n      ))}\n    </ContactStyledList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\r\n\r\nconst ContainerDeveloper = styled.div`\r\n  margin-left: auto;\r\n  margin-top: auto;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: orange;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Developer = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: orange;\r\n  text-align: right;\r\n`;\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <ContainerDeveloper>\r\n      <Developer>\r\n        Developed by{' '}\r\n        <Link href=\"https://www.linkedin.com/in/alexey-korotenko-379613219/\">\r\n          Alexey Korotenko\r\n        </Link>\r\n      </Developer>\r\n    </ContainerDeveloper>\r\n  );\r\n};\r\n","import React from 'react';\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\nimport actions from '../../redux/contacts/contact-action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contact-selector';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handler = evt => {\n    dispatch(actions.filterChange(evt.target.value));\n  };\n\n  return (\n    <InputType>\n      <InputText>Find contact by name</InputText>\n      <ImputEnter type=\"text\" value={filter} onChange={handler} />\n    </InputType>\n  );\n};\n\nexport default Filter;\n","import './App.css';\nimport React from 'react';\nimport { Container } from './Components/Container';\nimport Form from './Components/Form';\nimport { Section, Title } from './Components/Section';\nimport ContactList from './Components/ContactList';\nimport { Footer } from './Components/Footer';\nimport Filter from './Components/Filter';\nimport { Toaster } from 'react-hot-toast';\n\nexport default function App() {\n  return (\n    <Container>\n      <Toaster\n        toastOptions={{\n          error: {\n            duration: 2000,\n          },\n        }}\n      />\n      <Section>\n        <Title>Phonebook</Title>\n        <Form />\n      </Section>\n      <Section>\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList />\n      </Section>\n\n      <Footer />\n    </Container>\n  );\n}\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport actions from './contact-action';\r\nconst inicial = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(inicial, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contacts from './contacts/contact-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfigContacts = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst persistedReducer = persistReducer(persistConfigContacts, contacts);\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: persistedReducer },\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}